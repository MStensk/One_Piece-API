### A simple get request to the test endpoint. No need for login
GET {{url}}/auth/test/

### Populate the database with some data
GET {{url}}/crew/populate/

### Create a new user - this one will only get a USER role by default
POST {{url}}/auth/register/

{
    "username": "user2",
    "password": "test123"
}

###
POST {{url}}/auth/login/

{
    "username": "user2",
    "password": "test123"
}

> {%
    client.global.set("jwt_token", response.body.token);
    console.log("JWT Token:", client.global.get("jwt_token"));
%}

###
GET {{url}}/protected/user_demo/
Accept: application/json
Authorization: Bearer {{jwt_token}}

###
GET {{url}}/protected/admin_demo/
Accept: application/json
Authorization: Bearer {{jwt_token}}

### Add admin role to user
POST {{url}}/auth/user/addrole/
Accept: application/json
Authorization: Bearer {{jwt_token}}

{
    "role": "admin"
}
Accept: application/json
Authorization: Bearer {{jwt_token}}

###
GET {{url}}/crew
Accept: application/json
Authorization: Bearer {{jwt_token}}

###
GET {{url}}/crew/2

###
POST {{url}}/crew
Content-Type: application/json
Authorization: Bearer {{jwt_token}}

{
  "name": "Straw Hat Pirates",
  "ship": "Thousand Sunny",
  "jollyRoger": "Straw Hat Skull",
  "captain": "Monkey D. Luffy"
}

###
PUT {{url}}/crew/3
Content-Type: application/json

{
  "name": "Red Hair Pirates",
  "ship": "Red Force",
  "jollyRoger": "Skull with red scars",
  "captain": "Shanks"
}

###
DELETE {{url}}/hotels/3
Authorization: Bearer {{jwt_token}}

// Room API
###
GET {{url}}/rooms
Authorization: Bearer {{jwt_token}}

###
GET {{url}}/crew/1/pirates/1
Authorization: Bearer {{jwt_token}}

###
POST {{url}}/crew/1/pirates/1
Content-Type: application/json
Authorization: Bearer {{jwt_token}}

{
  "pirateName": "Monkey D. Luffe",
  "pirateBirthday": "5-5",
  "pirateGender": "Male",
  "pirateAge": 21,
  "pirateBounty": 3000000000
}
